{"version":3,"file":"azure-azureScript.js","mappings":"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","sources":["webpack:///azure/src/azureScript.js"],"sourcesContent":["var homeURL = window.location.href;\r\nvar URLhash = window.location.hash\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    if(!URLhash || !sessionStorage.getItem('MyToken')) {\r\n        oauth2Signin();\r\n    } else if(URLhash == '#VM') {\r\n        sendVMRequest();\r\n    } else {\r\n        URLhash = URLhash.replace('#access_token=','').split('&')[0];\r\n        sessionStorage.setItem('MyToken', URLhash);\r\n        sendSubRequest();\r\n    }\r\n})\r\n\r\nfunction oauth2Signin() {\r\n    var endpoint = 'https://login.microsoftonline.com/common/oauth2/authorize';\r\n\r\n    var form = document.createElement('form');\r\n    form.setAttribute('method', 'GET');\r\n    form.setAttribute('action', endpoint);\r\n\r\n    var params = {\r\n        'client_id': '457a5491-f470-4c0c-beae-efa300de112b',\r\n        'redirect_uri': homeURL,\r\n        'response_type': 'token',\r\n        'resource': 'https://management.core.windows.net',\r\n    }\r\n\r\n    for (var p in params) {\r\n        var input = document.createElement('input');\r\n        input.setAttribute('type', 'hidden');\r\n        input.setAttribute('name', p);\r\n        input.setAttribute('value', params[p]);\r\n        form.appendChild(input);\r\n    }\r\n    \r\n    document.body.appendChild(form);\r\n    form.submit();\r\n}\r\n\r\nlet sendSubRequest = (ev) => {\r\n\r\n    let subscriptionURL = 'https://management.azure.com/subscriptions?api-version=2022-12-01';\r\n    let token = sessionStorage.getItem('MyToken');\r\n    let header = new Headers();\r\n    //header.append('Authentication', `Bearer ${token}`);\r\n    header.append('Authorization', `Bearer ${token}`);\r\n\r\n    let request = new Request(subscriptionURL, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: header\r\n    });\r\n\r\n    function fetchSubscriptionID() {\r\n        let subID;\r\n        fetch(request)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                subID = data.value[0].id;\r\n                sessionStorage.setItem('subID', subID);\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(subID);\r\n                }, 2000);\r\n        })\r\n    }    \r\n    fetchSubscriptionID();\r\n}\r\n\r\nvar VMButton;\r\n\r\nif(sessionStorage.getItem('subID')) {\r\n    var navElement = document.getElementById('app-navigation-vue');\r\n\r\n    VMButton = document.createElement('button');\r\n    VMButton.setAttribute('class', 'app-navigation-button');\r\n\r\n    const entryText = document.createTextNode('Virtual Machines');\r\n    VMButton.appendChild(entryText);\r\n    navElement.appendChild(VMButton);\r\n}\r\n\r\nVMButton.addEventListener('click', () => {\r\n    window.location.hash = '#VM';\r\n    location.reload();\r\n});\r\n\r\nlet sendVMRequest = (ev) => {\r\n    const subscriptionID = sessionStorage.getItem('subID');\r\n    let VMInfo;\r\n\r\n    let vmURL = 'https://management.azure.com'.concat(subscriptionID, '/providers/Microsoft.Compute/virtualMachines?api-version=2023-07-01');\r\n    let token = sessionStorage.getItem('MyToken');\r\n    let header = new Headers();\r\n    header.append('Authorization', `Bearer ${token}`);\r\n\r\n    let vmRequest = new Request(vmURL, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: header\r\n    });\r\n\r\n    async function fetchVM() {\r\n        fetch(vmRequest)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            VMInfo = data;\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error message:\")\r\n            console.error(error.message);\r\n        });\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(VMInfo);\r\n                }, 2000);\r\n        })\r\n    }\r\n\r\n    async function addVMToHTML() {\r\n        const VMInfo = await fetchVM();\r\n\r\n        for(let i = 0; i < VMInfo.value.length; i++) {\r\n            console.log(VMInfo.value[i].name);\r\n            const newEntry = document.createElement('div');\r\n            const entryText = document.createTextNode(VMInfo.value[i].name);\r\n            newEntry.appendChild(entryText);\r\n            document.body.insertBefore(newEntry, document.getElementById('vm-footer'));\r\n        }\r\n    }\r\n    \r\n    addVMToHTML();\r\n}"],"names":["homeURL","window","location","href","URLhash","hash","document","addEventListener","sessionStorage","getItem","sendVMRequest","replace","split","setItem","sendSubRequest","endpoint","form","createElement","setAttribute","params","p","input","appendChild","body","submit","oauth2Signin","ev","token","header","Headers","append","concat","request","Request","method","mode","headers","subID","fetch","then","response","json","data","console","log","value","id","catch","error","message","Promise","resolve","setTimeout","fetchSubscriptionID","VMButton","navElement","getElementById","entryText","createTextNode","reload","subscriptionID","VMInfo","vmURL","vmRequest","async","fetchVM","i","length","name","newEntry","insertBefore","addVMToHTML"],"sourceRoot":""}