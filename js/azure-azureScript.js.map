{"version":3,"file":"azure-azureScript.js","mappings":"MAAAA,SAASC,iBAAiB,oBAAoB,KAC1CC,eAAeC,QAAQ,UAAW,05DAClCC,GAAa,IAGjB,IAAIA,EAAeC,IAEf,IACIC,EAAQJ,eAAeK,QAAQ,WAC/BC,EAAS,IAAIC,QACjBD,EAAOE,OAAO,iBAAkB,UAAFC,OAAYL,IAC1CE,EAAOE,OAAO,gBAAiB,UAAFC,OAAYL,IAEzC,IAAIM,EAAU,IAAIC,QANI,oEAMqB,CACvCC,OAAQ,MACRC,KAAM,OACNC,QAASR,IAoBbS,eAAeC,IACX,MAAMC,QAlBV,WACI,IAAIC,EASJ,OARAC,MAAMT,GACDU,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFL,EAAQK,EAAKC,MAAM,GAAGC,EAAE,IAE3BC,OAAMC,IACHC,QAAQD,MAAMA,EAAME,QAAQ,IAE7B,IAAIC,SAASC,IAChBC,YAAW,KACPD,EAAQb,EAAM,GACX,IAAK,GAEpB,CAGiCe,GAE7B,IAAIC,EADJN,QAAQO,IAAIlB,GAGZ,IAAImB,EAAQ,+BAA+B3B,OAAOQ,EAAgB,uEAE9DoB,EAAY,IAAI1B,QAAQyB,EAAO,CAC/BxB,OAAQ,MACRC,KAAM,OACNC,QAASR,IAaT,OAVJa,MAAMkB,GACDjB,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFK,QAAQO,IAAIZ,GACZW,EAASX,CAAI,IAEhBG,OAAMC,IACHC,QAAQD,MAAMA,EAAME,QAAQ,IAGzB,IAAIC,SAASC,IAChBC,YAAW,KACPD,EAAQG,EAAO,GACZ,IAAK,GAExB,EAEAnB,iBACI,MAAMmB,QAAelB,IAErB,IAAI,IAAIsB,EAAI,EAAGA,EAAIJ,EAAOV,MAAMe,OAAQD,IAAK,CACzCV,QAAQO,IAAID,EAAOV,MAAMc,GAAGE,MAC5B,MAAMC,EAAW3C,SAAS4C,cAAc,OAClCC,EAAY7C,SAAS8C,eAAeV,EAAOV,MAAMc,GAAGE,MAC1DC,EAASI,YAAYF,GACrB7C,SAASgD,KAAKC,aAAaN,EAAU3C,SAASkD,eAAe,aACjE,CACJ,CAEAC,EAAW,C","sources":["webpack:///azure/src/azureScript.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    sessionStorage.setItem(\"MyToken\", 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuY29yZS53aW5kb3dzLm5ldCIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0L2FjNzllNWE4LWUwZTQtNDM0Yi1hMjkyLTJjODliNWMyODM2Ni8iLCJpYXQiOjE2OTYyNjkwMzIsIm5iZiI6MTY5NjI2OTAzMiwiZXhwIjoxNjk2MjczMzA5LCJhY3IiOiIxIiwiYWlvIjoiQVRRQXkvOFVBQUFBL1VnR3duYVVzaW1ocmVYbTg4Sk5IVUNGaVpSQlRjYldDOUVkbHIvRjB3R0Q0aXBMVGE1akQwMWhKTTZKdERyWiIsImFtciI6WyJwd2QiXSwiYXBwaWQiOiIxOGZiY2ExNi0yMjI0LTQ1ZjYtODViMC1mN2JmMmIzOWIzZjMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6IkNvbnN1ZWdyYSIsImdpdmVuX25hbWUiOiJCcmFkbGV5IiwiZ3JvdXBzIjpbIjU0MWI0OTA0LTljYjAtNGMyNC04Zjk3LTVlMzIxNjc2NDhmMiIsIjExZGYyMDEwLTk1NTgtNDBjYy1hNDg2LWJhMWI0NDdmNDRmNSIsImE1YjIyOWQwLWE5N2YtNGE5Yi1iZGYyLTE4YTAxZWQxMGExNyJdLCJpZHR5cCI6InVzZXIiLCJpcGFkZHIiOiIyNjAwOjE3MDA6Mzg3MDo1MjYwOjJkN2Y6ZTllYjo2YjA1OjNlMGQiLCJuYW1lIjoiQnJhZGxleSBDb25zdWVncmEiLCJvaWQiOiJmZTIyZTgzOC04MDRkLTQ1ZTQtOGRhYS05MzhkZDlhOWZmZTQiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMTkyOTA4MzIyNS0yMzgwMzEwMTU1LTMyNDQ0NzkxOTEtNzgzNDAwIiwicHVpZCI6IjEwMDMyMDAwQjZDMzA0RTkiLCJyaCI6IjAuQVZzQXFPVjVyT1RnUzBPaWtpeUp0Y0tEWmtaSWYza0F1dGRQdWtQYXdmajJNQk5iQVBnLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6IlZJRll2S05jVk1MNlc1ZkFEc2NJc1BVUzhjRUhzMTFzVmIxUzhzVm8xcUkiLCJ0aWQiOiJhYzc5ZTVhOC1lMGU0LTQzNGItYTI5Mi0yYzg5YjVjMjgzNjYiLCJ1bmlxdWVfbmFtZSI6ImJjb25zMDEwQGZpdS5lZHUiLCJ1cG4iOiJiY29uczAxMEBmaXUuZWR1IiwidXRpIjoiMmt1UGdRczlxa1d6WDJYZW52a3NBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc190Y2R0IjoxMzQ5Mzg0MzczfQ.rDfn5BLcfdWD3_HmRVEL5FWGdntCHlGwhHmUx1xaNJkFV-cWq5UfKhyPo4rQP-_8KVIP1tWjqAl8U9iQXWFXl7ZnVofn53G3cNtY1fTSOwdNB0zT_v3JKvYRiYhrcZjH67C8s6VWMCCPyEnmrXezYHyP93Oj1I-3x4NWvg4d3RoIZnTXGZ6u43Dk2_yqYOtQl8Kkves-kqb3Y7MZHcJG1pFgQk1PrZzzEjpT9qBJxAmcW3GnF5HFU-vq36Dc6JHKoJ6rHJopPiQes9UHx9lxZyVtoFfAoIkYejlEOduTuGoyLaqOJZnr-NEZ3FuUudLI9GkM5sl-uljktqrEo7oc1g');\r\n    sendRequest();\r\n})\r\n\r\nlet sendRequest = (ev) => {\r\n\r\n    let subscriptionURL = 'https://management.azure.com/subscriptions?api-version=2022-12-01';\r\n    let token = sessionStorage.getItem(\"MyToken\");\r\n    let header = new Headers();\r\n    header.append('Authentication', `Bearer ${token}`);\r\n    header.append('Authorization', `Bearer ${token}`);\r\n\r\n    let request = new Request(subscriptionURL, {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        headers: header\r\n    });\r\n\r\n    function fetchSubscriptionID() {\r\n        let subID;\r\n        fetch(request)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                subID = data.value[0].id;\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(subID);\r\n                }, 1000);\r\n        })\r\n    }\r\n\r\n    async function fetchVM() {\r\n        const subscriptionID = await fetchSubscriptionID();\r\n        console.log(subscriptionID);\r\n        let VMInfo;\r\n\r\n        let vmURL = 'https://management.azure.com'.concat(subscriptionID, '/providers/Microsoft.Compute/virtualMachines?api-version=2023-07-01');\r\n\r\n        let vmRequest = new Request(vmURL, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: header\r\n        });\r\n\r\n        fetch(vmRequest)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                VMInfo = data;\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n\r\n            return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                    resolve(VMInfo);\r\n                    }, 1000);\r\n            })\r\n    }\r\n\r\n    async function addToHTML() {\r\n        const VMInfo = await fetchVM();\r\n\r\n        for(let i = 0; i < VMInfo.value.length; i++) {\r\n            console.log(VMInfo.value[i].name);\r\n            const newEntry = document.createElement(\"div\");\r\n            const entryText = document.createTextNode(VMInfo.value[i].name);\r\n            newEntry.appendChild(entryText);\r\n            document.body.insertBefore(newEntry, document.getElementById(\"vm-footer\"));\r\n        }\r\n    }\r\n    \r\n    addToHTML();\r\n}"],"names":["document","addEventListener","sessionStorage","setItem","sendRequest","ev","token","getItem","header","Headers","append","concat","request","Request","method","mode","headers","async","fetchVM","subscriptionID","subID","fetch","then","response","json","data","value","id","catch","error","console","message","Promise","resolve","setTimeout","fetchSubscriptionID","VMInfo","log","vmURL","vmRequest","i","length","name","newEntry","createElement","entryText","createTextNode","appendChild","body","insertBefore","getElementById","addToHTML"],"sourceRoot":""}