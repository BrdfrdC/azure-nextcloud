{"version":3,"file":"azure-azureScript.js","mappings":"MAAA,IAAIA,EAAUC,OAAOC,SAASC,KAC1BC,EAAUH,OAAOC,SAASG,KAE9BC,SAASC,iBAAiB,oBAAoB,KACtCH,GAGAA,EAAUA,EAAQI,QAAQ,iBAAiB,IAAIC,MAAM,KAAK,GAC1DC,eAAeC,QAAQ,UAAWP,GAClCQ,KAIR,WACI,IAAIC,EAAW,4DAEXC,EAAOR,SAASS,cAAc,QAClCD,EAAKE,aAAa,SAAU,OAC5BF,EAAKE,aAAa,SAAUH,GAE5B,IAAII,EAAS,CACT,UAAa,uCACb,aAAgBjB,EAChB,cAAiB,QACjB,SAAY,uCAGhB,IAAK,IAAIkB,KAAKD,EAAQ,CAClB,IAAIE,EAAQb,SAASS,cAAc,SACnCI,EAAMH,aAAa,OAAQ,UAC3BG,EAAMH,aAAa,OAAQE,GAC3BC,EAAMH,aAAa,QAASC,EAAOC,IACnCJ,EAAKM,YAAYD,EACrB,CAEAb,SAASe,KAAKD,YAAYN,GAC1BA,EAAKQ,QACT,CAhCQC,EAKJ,IA6BJ,IAAIX,EAAeY,IAEf,IACIC,EAAQf,eAAegB,QAAQ,WAC/BC,EAAS,IAAIC,QAEjBD,EAAOE,OAAO,gBAAiB,UAAFC,OAAYL,IAEzC,IAAIM,EAAU,IAAIC,QANI,oEAMqB,CACvCC,OAAQ,MACRC,KAAM,OACNC,QAASR,IAsBbS,eAAeC,IACX,MAAMC,QApBV,WACI,IAAIC,EAWJ,OAVAC,QAAQC,IAAIV,GACZW,MAAMX,GACDY,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFN,QAAQC,IAAIK,GACZP,EAAQO,EAAKC,MAAM,GAAGC,EAAE,IAE3BC,OAAMC,IACHV,QAAQU,MAAMA,EAAMC,QAAQ,IAE7B,IAAIC,SAASC,IAChBC,YAAW,KACPD,EAAQd,EAAM,GACX,IAAK,GAEpB,CAGiCgB,GAE7B,IAAIC,EADJ9C,eAAeC,QAAQ,QAAS2B,GAGhC,IAAImB,EAAQ,+BAA+B3B,OAAOQ,EAAgB,uEAE9DoB,EAAY,IAAI1B,QAAQyB,EAAO,CAC/BxB,OAAQ,MACRC,KAAM,OACNC,QAASR,IAgBT,OAbJa,QAAQC,IAAIiB,GAEZhB,MAAMgB,GACDf,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFN,QAAQC,IAAIK,GACZU,EAASV,CAAI,IAEhBG,OAAMC,IACHV,QAAQC,IAAI,kBACZD,QAAQU,MAAMA,EAAMC,QAAQ,IAGzB,IAAIC,SAASC,IAChBC,YAAW,KACPD,EAAQG,EAAO,GACZ,IAAK,GAExB,EAEApB,iBACI,MAAMoB,QAAenB,IAErB,IAAI,IAAIsB,EAAI,EAAGA,EAAIH,EAAOT,MAAMa,OAAQD,IAAK,CACzCnB,QAAQC,IAAIe,EAAOT,MAAMY,GAAGE,MAC5B,MAAMC,EAAWxD,SAASS,cAAc,OAClCgD,EAAYzD,SAAS0D,eAAeR,EAAOT,MAAMY,GAAGE,MAC1DC,EAAS1C,YAAY2C,GACrBzD,SAASe,KAAK4C,aAAaH,EAAUxD,SAAS4D,eAAe,aACjE,CACJ,CAEAC,EAAW,C","sources":["webpack:///azure/src/azureScript.js"],"sourcesContent":["var homeURL = window.location.href;\r\nvar URLhash = window.location.hash\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    if(!URLhash) {\r\n        oauth2Signin();\r\n    } else {\r\n        URLhash = URLhash.replace('#access_token=','').split('&')[0];\r\n        sessionStorage.setItem('MyToken', URLhash);\r\n        sendRequest();\r\n    }\r\n})\r\n\r\nfunction oauth2Signin() {\r\n    var endpoint = 'https://login.microsoftonline.com/common/oauth2/authorize';\r\n\r\n    var form = document.createElement('form');\r\n    form.setAttribute('method', 'GET');\r\n    form.setAttribute('action', endpoint);\r\n\r\n    var params = {\r\n        'client_id': '457a5491-f470-4c0c-beae-efa300de112b',\r\n        'redirect_uri': homeURL,\r\n        'response_type': 'token',\r\n        'resource': 'https://management.core.windows.net',\r\n    }\r\n\r\n    for (var p in params) {\r\n        var input = document.createElement('input');\r\n        input.setAttribute('type', 'hidden');\r\n        input.setAttribute('name', p);\r\n        input.setAttribute('value', params[p]);\r\n        form.appendChild(input);\r\n    }\r\n    \r\n    document.body.appendChild(form);\r\n    form.submit();\r\n}\r\n\r\nlet sendRequest = (ev) => {\r\n\r\n    let subscriptionURL = 'https://management.azure.com/subscriptions?api-version=2022-12-01';\r\n    let token = sessionStorage.getItem('MyToken');\r\n    let header = new Headers();\r\n    //header.append('Authentication', `Bearer ${token}`);\r\n    header.append('Authorization', `Bearer ${token}`);\r\n\r\n    let request = new Request(subscriptionURL, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: header\r\n    });\r\n\r\n    function fetchSubscriptionID() {\r\n        let subID;\r\n        console.log(request);\r\n        fetch(request)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                subID = data.value[0].id;\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(subID);\r\n                }, 2000);\r\n        })\r\n    }\r\n\r\n    async function fetchVM() {\r\n        const subscriptionID = await fetchSubscriptionID();\r\n        sessionStorage.setItem('subID', subscriptionID);\r\n        let VMInfo;\r\n\r\n        let vmURL = 'https://management.azure.com'.concat(subscriptionID, '/providers/Microsoft.Compute/virtualMachines?api-version=2023-07-01');\r\n        \r\n        let vmRequest = new Request(vmURL, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: header\r\n        });\r\n\r\n        console.log(vmRequest);\r\n\r\n        fetch(vmRequest)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                VMInfo = data;\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error message:\")\r\n                console.error(error.message);\r\n            });\r\n\r\n            return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                    resolve(VMInfo);\r\n                    }, 2000);\r\n            })\r\n    }\r\n\r\n    async function addToHTML() {\r\n        const VMInfo = await fetchVM();\r\n\r\n        for(let i = 0; i < VMInfo.value.length; i++) {\r\n            console.log(VMInfo.value[i].name);\r\n            const newEntry = document.createElement('div');\r\n            const entryText = document.createTextNode(VMInfo.value[i].name);\r\n            newEntry.appendChild(entryText);\r\n            document.body.insertBefore(newEntry, document.getElementById('vm-footer'));\r\n        }\r\n    }\r\n    \r\n    addToHTML();\r\n}"],"names":["homeURL","window","location","href","URLhash","hash","document","addEventListener","replace","split","sessionStorage","setItem","sendRequest","endpoint","form","createElement","setAttribute","params","p","input","appendChild","body","submit","oauth2Signin","ev","token","getItem","header","Headers","append","concat","request","Request","method","mode","headers","async","fetchVM","subscriptionID","subID","console","log","fetch","then","response","json","data","value","id","catch","error","message","Promise","resolve","setTimeout","fetchSubscriptionID","VMInfo","vmURL","vmRequest","i","length","name","newEntry","entryText","createTextNode","insertBefore","getElementById","addToHTML"],"sourceRoot":""}